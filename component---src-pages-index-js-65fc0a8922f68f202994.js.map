{"version":3,"file":"component---src-pages-index-js-65fc0a8922f68f202994.js","mappings":"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","sources":["webpack://guests-of-the-talk-show/./src/components/AppearancesTable.js","webpack://guests-of-the-talk-show/./src/pages/index.js"],"sourcesContent":["import * as React from 'react'\nimport { DateTime } from 'luxon'\nimport { Link } from 'gatsby'\n\nimport isoToLocaleString from '../utilities/isoToLocaleString.js'\nimport slugify from '../utilities/slugify.js'\n\nimport * as mainStyle from '../style/main.module.css'\nimport * as tableStyle from '../style/appearances_table.module.css'\n\nimport Guests from '../../content/guests.json'\n\nconst latestAppearanceEpisode = (appearances) => {\n  const latest = appearances[0]\n  return (\n    <Link\n      to={`/episode/${latest.episodeNumber}-${slugify(latest.episodeTitle)}`}\n    >\n      {latest.episodeNumber}: {latest.episodeTitle}\n    </Link>\n  )\n}\n\nconst latestAppearanceDate = (appearances) => {\n  const latest = appearances[0]\n  return isoToLocaleString(latest.date)\n}\n\n// sudo-enums\nconst SortKey = {\n  Appearances: 'appearances',\n  GuestName: 'guest-name',\n  PodcastNumber: 'podcast-number',\n  AppearanceDate: 'last-appearance-date',\n}\nconst SortOrder = {\n  Asc: 'ascending',\n  Desc: 'descending',\n}\n\nconst makeSortTitle = (currentSort, currentOrder, buttonsSort) => {\n  const sortString = buttonsSort.replace('-', ' ')\n\n  let order = currentOrder\n  if (currentSort === buttonsSort) {\n    if (currentOrder === SortOrder.Asc) {\n      order = SortOrder.Desc\n    } else {\n      order = SortOrder.Asc\n    }\n  }\n\n  return `Sort the table by the ${sortString}, ${order}`\n}\n\nconst AppearanceTable = () => {\n  let [sort, setSort] = React.useState(SortKey.PodcastNumber)\n  let [order, setOrder] = React.useState(SortOrder.Desc)\n\n  const reorderTable = (newSort) => {\n    if (sort === newSort) {\n      if (order === SortOrder.Desc) {\n        setOrder(SortOrder.Asc)\n      } else {\n        setOrder(SortOrder.Desc)\n      }\n    } else {\n      setSort(newSort)\n    }\n  }\n\n  const arrayedGuests = Object.keys(Guests).map((key) => ({\n    key: key,\n    value: Guests[key],\n  }))\n\n  arrayedGuests.sort((a, b) => {\n    let sortResult = 0\n    switch (sort) {\n      default:\n      case SortKey.Appearances:\n        sortResult = a.value.length - b.value.length\n        break\n      case SortKey.GuestName:\n        sortResult = a.key.localeCompare(b.key)\n        break\n      case SortKey.PodcastNumber:\n        sortResult = a.value[0].episodeNumber - b.value[0].episodeNumber\n        break\n      case SortKey.AppearanceDate:\n        sortResult =\n          DateTime.fromISO(a.value[0].date) - DateTime.fromISO(b.value[0].date)\n    }\n\n    // defaults to ascending\n    if (order === SortOrder.Desc) {\n      sortResult = sortResult * -1\n    }\n\n    return sortResult\n  })\n\n  const sortedGuests = {}\n  for (const item of arrayedGuests) {\n    sortedGuests[item.key] = item.value\n  }\n\n  return (\n    <div className={tableStyle.graph_wrapper}>\n      <table className={tableStyle.graph}>\n        <thead>\n          <tr>\n            <td>\n              <button\n                onClick={() => reorderTable(SortKey.Appearances)}\n                className={`${mainStyle.title} ${\n                  sort === SortKey.Appearances ? tableStyle.active : ''\n                } ${\n                  order === SortOrder.Asc\n                    ? tableStyle.sort_asc\n                    : tableStyle.sort_desc\n                }`}\n                title={makeSortTitle(sort, order, SortKey.Appearances)}\n              >\n                Appearances\n              </button>\n            </td>\n            <td>\n              <button\n                onClick={() => reorderTable(SortKey.GuestName)}\n                className={`${mainStyle.title} ${\n                  sort === SortKey.GuestName ? tableStyle.active : ''\n                } ${\n                  order === SortOrder.Asc\n                    ? tableStyle.sort_asc\n                    : tableStyle.sort_desc\n                }`}\n                title={makeSortTitle(sort, order, SortKey.GuestName)}\n              >\n                Guest\n              </button>\n            </td>\n            <td>\n              <button\n                onClick={() => reorderTable(SortKey.PodcastNumber)}\n                className={`${mainStyle.title} ${\n                  sort === SortKey.PodcastNumber ? tableStyle.active : ''\n                } ${\n                  order === SortOrder.Asc\n                    ? tableStyle.sort_asc\n                    : tableStyle.sort_desc\n                }`}\n                title={makeSortTitle(sort, order, SortKey.PodcastNumber)}\n              >\n                Last Podcast\n              </button>\n            </td>\n            <td>\n              <button\n                onClick={() => reorderTable(SortKey.AppearanceDate)}\n                className={`${mainStyle.title} ${\n                  sort === SortKey.AppearanceDate ? tableStyle.active : ''\n                } ${\n                  order === SortOrder.Asc\n                    ? tableStyle.sort_asc\n                    : tableStyle.sort_desc\n                }`}\n                title={makeSortTitle(sort, order, SortKey.AppearanceDate)}\n              >\n                Last Appearance\n              </button>\n            </td>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(sortedGuests).map((guest, i) => {\n            return (\n              <tr\n                key={guest}\n                className={`${mainStyle.event} ${mainStyle[`color-${i % 10}`]}`}\n              >\n                <td>{Guests[guest].length}</td>\n                <td>\n                  <Link to={`/guest/${slugify(guest)}`}>{guest}</Link>\n                </td>\n                <td>{latestAppearanceEpisode(Guests[guest])}</td>\n                <td>{latestAppearanceDate(Guests[guest])}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default AppearanceTable\n","import * as React from 'react'\n\nimport * as mainStyle from '../style/main.module.css'\n\nimport Header from '../components/Header.js'\nimport AppearanceTable from '../components/AppearancesTable.js'\nimport DurationChart from '../components/DurationChart.js'\n\nconst IndexPage = () => {\n  return (\n    <main className={mainStyle.container}>\n      <title>Guests of The Talk Show</title>\n      <div className={mainStyle.container}>\n        <Header />\n        <AppearanceTable />\n        <DurationChart />\n      </div>\n    </main>\n  )\n}\n// Step 3: Export your component\nexport default IndexPage\n"],"names":["SortKey","SortOrder","makeSortTitle","currentSort","currentOrder","buttonsSort","sortString","replace","order","React","sort","setSort","setOrder","reorderTable","newSort","arrayedGuests","Object","keys","Guests","map","key","value","a","b","sortResult","length","localeCompare","episodeNumber","DateTime","date","sortedGuests","item","className","tableStyle","onClick","mainStyle","title","guest","i","to","slugify","appearances","latest","episodeTitle","isoToLocaleString","latestAppearanceDate","Header","DurationChart"],"sourceRoot":""}