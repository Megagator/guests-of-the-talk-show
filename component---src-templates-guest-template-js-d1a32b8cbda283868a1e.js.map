{"version":3,"file":"component---src-templates-guest-template-js-d1a32b8cbda283868a1e.js","mappings":"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","sources":["webpack://guests-of-the-talk-show/./src/components/EpisodeList.js","webpack://guests-of-the-talk-show/./src/components/GuestStats.js","webpack://guests-of-the-talk-show/./src/style/guest_stats.module.css","webpack://guests-of-the-talk-show/./src/templates/guestTemplate.js","webpack://guests-of-the-talk-show/./src/style/guest.module.css"],"sourcesContent":["import * as React from 'react'\nimport { DateTime } from 'luxon'\nimport { Link } from 'gatsby'\n\nimport friendlyDuration from '../utilities/friendlyDuration.js'\nimport isoToLocalString from '../utilities/isoToLocaleString.js'\n\nimport * as mainStyle from '../style/main.module.css'\nimport * as tableStyle from '../style/appearances_table.module.css'\n\nimport Episodes from '../../content/episodes.json'\n\n// sudo-enums\nconst SortKey = {\n  Episode: 'Episode',\n  Date: 'Date',\n  Duration: 'Duration',\n}\nconst SortOrder = {\n  Asc: 'ascending',\n  Desc: 'descending',\n}\n\nconst makeSortTitle = (currentSort, currentOrder, buttonsSort) => {\n  let order = currentOrder\n  if (currentSort === buttonsSort) {\n    if (currentOrder === SortOrder.Asc) {\n      order = SortOrder.Desc\n    } else {\n      order = SortOrder.Asc\n    }\n  }\n\n  return `Sort the table by the ${buttonsSort}, ${order}`\n}\n\nconst EpsisodeList = (props) => {\n  let [sort, setSort] = React.useState(SortKey.Episode)\n  let [order, setOrder] = React.useState(SortOrder.Desc)\n\n  const reorderTable = (newSort) => {\n    if (sort === newSort) {\n      if (order === SortOrder.Desc) {\n        setOrder(SortOrder.Asc)\n      } else {\n        setOrder(SortOrder.Desc)\n      }\n    } else {\n      setSort(newSort)\n    }\n  }\n\n  const filteredEpisodes = Episodes.filter((epi) => {\n    for (const guest of epi.guests) {\n      if (guest === props.guest) {\n        return true\n      }\n    }\n\n    return false\n  })\n\n  filteredEpisodes.sort((a, b) => {\n    let sortResult = 0\n    switch (sort) {\n      default:\n      case SortKey.Episode:\n        sortResult = a.number - b.number\n        break\n      case SortKey.Duration:\n        sortResult = a.durationSeconds - b.durationSeconds\n    }\n\n    // defaults to ascending\n    if (order === SortOrder.Desc) {\n      sortResult = sortResult * -1\n    }\n\n    return sortResult\n  })\n\n  return (\n    <div className={tableStyle.graph_wrapper}>\n      <table className={tableStyle.graph}>\n        <thead>\n          <tr>\n            <td>\n              <button\n                onClick={() => reorderTable(SortKey.Episode)}\n                className={`${mainStyle.title} ${\n                  sort === SortKey.Episode ? tableStyle.active : ''\n                } ${\n                  order === SortOrder.Asc\n                    ? tableStyle.sort_asc\n                    : tableStyle.sort_desc\n                }`}\n                title={makeSortTitle(sort, order, SortKey.Episode)}\n              >\n                {SortKey.Episode}\n              </button>\n            </td>\n            <td>\n              <button\n                onClick={() => reorderTable(SortKey.Duration)}\n                className={`${mainStyle.title} ${\n                  sort === SortKey.Duration ? tableStyle.active : ''\n                } ${\n                  order === SortOrder.Asc\n                    ? tableStyle.sort_asc\n                    : tableStyle.sort_desc\n                }`}\n                title={makeSortTitle(sort, order, SortKey.Duration)}\n              >\n                {SortKey.Duration}\n              </button>\n            </td>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredEpisodes.map((epi, i) => {\n            return (\n              <tr key={`episode_${epi.number}`} className={mainStyle.event}>\n                <td>\n                  <span>\n                    <span>\n                      <Link to={`/episode/${epi.slug}`}>\n                        {`${epi.number}: ${epi.title}`}\n                      </Link>\n                    </span>\n                    <span>{isoToLocalString(epi.pubDate)}</span>\n                  </span>\n                </td>\n                <td>{friendlyDuration(epi.durationSeconds)}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default EpsisodeList\n","import * as React from 'react'\nimport { DateTime } from 'luxon'\n\nimport * as statStyle from '../style/guest_stats.module.css'\n\nimport Episodes from '../../content/episodes.json'\n\nconst GuestStats = (props) => {\n  const [episodes, setEpisodes] = React.useState([])\n  const [cadence, setCadence] = React.useState(0)\n  const [next, setNext] = React.useState(null)\n  const [nextDiff, setNextDiff] = React.useState(null)\n\n  React.useEffect(() => {\n    const filteredEpisodes = Episodes.filter((epi) => {\n      for (const guest of epi.guests) {\n        if (guest === props.guest) {\n          return true\n        }\n      }\n\n      return false\n    })\n\n    filteredEpisodes.reverse()\n    setEpisodes(filteredEpisodes)\n\n    const daysInBetween = []\n    let previousApp = null\n    for (const appearance of filteredEpisodes) {\n      if (previousApp !== null) {\n        const newApp = DateTime.fromISO(appearance.pubDate)\n        const diff = newApp.diff(previousApp, 'days').toObject()\n        daysInBetween.push(Math.abs(diff.days))\n      }\n\n      previousApp = DateTime.fromISO(appearance.pubDate)\n    }\n\n    const sum = daysInBetween.reduce((prev, curr) => prev + curr, 0)\n    let averageDays = 0\n    if (sum > 0 && daysInBetween.length > 0) {\n      averageDays = Math.round(sum / daysInBetween.length)\n    }\n    setCadence(averageDays)\n\n    if (averageDays > 0) {\n      const lastApp = previousApp\n      const projectedNextApp = lastApp.plus({ days: averageDays })\n      setNext(projectedNextApp)\n\n      const diffNow = projectedNextApp.diffNow('days').toObject().days\n      setNextDiff(Math.round(diffNow))\n    }\n  }, [props.guest])\n\n  return (\n    <div className={statStyle.stat_table}>\n      <table>\n        <tbody>\n          <tr>\n            <td>Appearances</td>\n            <td>{episodes.length}</td>\n          </tr>\n          <tr>\n            <td>Cadence</td>\n            {cadence === 0 ? <td>None</td> : <td>{cadence} days</td>}\n          </tr>\n          <tr>\n            <td>Next</td>\n            {next === null ? (\n              <td>None</td>\n            ) : (\n              <td>\n                {next.toLocaleString(DateTime.DATE_MED)}\n                <br />\n                {nextDiff > 0 ? (\n                  <em>(in {nextDiff} days)</em>\n                ) : (\n                  <em>({Math.abs(nextDiff).toLocaleString()} days ago)</em>\n                )}\n              </td>\n            )}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default GuestStats\n","// extracted by mini-css-extract-plugin\nexport var stat_table = \"guest_stats-module--stat_table--R3nt3\";","import React from 'react'\n\nimport Header from '../components/Header.js'\nimport DurationChart from '../components/DurationChart.js'\nimport EpisodeList from '../components/EpisodeList.js'\nimport GuestStats from '../components/GuestStats.js'\n\nimport * as mainStyle from '../style/main.module.css'\nimport * as guestStyle from '../style/guest.module.css'\nimport { Helmet } from 'react-helmet'\nimport WeekChart from '../components/WeekChart.js'\n\nconst guestTemplate = (props) => {\n  const { pageContext } = props\n  const { guest } = pageContext\n\n  return (\n    <main className={mainStyle.container}>\n      <Helmet>\n        <title>{guest} | Guest of The Talk Show</title>\n      </Helmet>\n      <div className={mainStyle.container}>\n        <Header isSingular={true} />\n        <h1\n          className={`${mainStyle.title} ${mainStyle.text_center} ${mainStyle.m_bot_lg} ${mainStyle.m_top_lg}`}\n        >\n          {guest}\n        </h1>\n        <div className={guestStyle.episode_guest_wrapper}>\n          {/* order flipped in css when two up */}\n          <GuestStats guest={guest} />\n          <EpisodeList guest={guest} />\n        </div>\n        <DurationChart guest={guest} />\n        <WeekChart guest={guest} />\n      </div>\n    </main>\n  )\n}\n\nexport default guestTemplate\n","// extracted by mini-css-extract-plugin\nexport var episode_guest_wrapper = \"guest-module--episode_guest_wrapper--R6dby\";\nexport var stat_table = \"guest-module--stat_table--DdItt\";"],"names":["SortKey","SortOrder","makeSortTitle","currentSort","currentOrder","buttonsSort","order","props","React","sort","setSort","setOrder","reorderTable","newSort","filteredEpisodes","Episodes","epi","guests","guest","a","b","sortResult","number","durationSeconds","className","tableStyle","onClick","mainStyle","title","map","i","key","to","slug","isoToLocalString","pubDate","friendlyDuration","episodes","setEpisodes","cadence","setCadence","next","setNext","nextDiff","setNextDiff","reverse","daysInBetween","previousApp","appearance","diff","DateTime","toObject","push","Math","abs","days","sum","reduce","prev","curr","averageDays","length","round","projectedNextApp","plus","diffNow","toLocaleString","pageContext","Helmet","Header","isSingular","EpisodeList","DurationChart","WeekChart"],"sourceRoot":""}